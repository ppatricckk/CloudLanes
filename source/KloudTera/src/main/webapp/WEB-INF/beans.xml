<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://cxf.apache.org/jaxrs
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://cxf.apache.org/schemas/jaxrs.xsd">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Load Properties file -->
	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" />
	<context:property-placeholder location="classpath:AppConfig.properties"
		ignore-unresolvable="true" />

	<!-- Import datasource -->
	<import resource="datasource.xml" />

	<!-- Base package to scan for components -->
	<context:component-scan base-package="com.cloudlanes" />
	<mvc:annotation-driven />
	<!-- <bean id="remoteconn" class="com.cloudlanes.storageaccess.RemoteConnectionInfo">
		<constructor-arg index="0" value="root" />
		<constructor-arg index="1" value="asdf" />
		<constructor-arg index="2" value="172.17.222.38" />
		<constructor-arg index="3" value="22" />
	</bean>
	<bean id="vtlimpl" class="com.cloudlanes.storageaccess.VTLImpl">
		<constructor-arg ref="remoteconn" />

	</bean> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.transaction.factory_class">
					org.hibernate.transaction.JDBCTransactionFactory
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>

		</property>
		<property name="packagesToScan" value="com.cloudlanes.db.entities" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>

	<!-- Configure to plugin JSON as request and response in method handler -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>


	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>

</beans>
    